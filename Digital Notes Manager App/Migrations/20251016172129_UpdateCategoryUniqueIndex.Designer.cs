// <auto-generated />
using System;
using Digital_Notes_Manager_App.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Digital_Notes_Manager_App.Migrations
{
    [DbContext(typeof(DigitalNotesDbContext))]
    [Migration("20251016172129_UpdateCategoryUniqueIndex")]
    partial class UpdateCategoryUniqueIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId")
                        .HasName("Category_PK");

                    b.HasIndex("UserId");

                    b.HasIndex("CategoryName", "UserId")
                        .IsUnique();

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NoteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ReminderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NoteId")
                        .HasName("Note_PK");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Note", (string)null);
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReminderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReminderId"));

                    b.Property<bool>("IsNotified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("datetime");

                    b.HasKey("ReminderId")
                        .HasName("Reminder_PK");

                    b.HasIndex("NoteId");

                    b.ToTable("Reminder", (string)null);
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("User_PK");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Category", b =>
                {
                    b.HasOne("Digital_Notes_Manager_App.Models.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Category_User_FK");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Note", b =>
                {
                    b.HasOne("Digital_Notes_Manager_App.Models.Category", "Category")
                        .WithMany("Notes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Note_Category_FK");

                    b.HasOne("Digital_Notes_Manager_App.Models.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Note_User_FK");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Reminder", b =>
                {
                    b.HasOne("Digital_Notes_Manager_App.Models.Note", "Note")
                        .WithMany("Reminders")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Reminder_Note_FK");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Category", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.Note", b =>
                {
                    b.Navigation("Reminders");
                });

            modelBuilder.Entity("Digital_Notes_Manager_App.Models.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
